class Solution {
public:
    int f(int ind,int k,vector<int>& arr,vector<vector<int>> &dp){
        if(ind==0){
            if(k%arr[0]==0) return k/arr[0];
            return 1e8;
        }

        if(dp[ind][k]!=-1) return dp[ind][k];
        int notTake = 0+f(ind-1,k,arr,dp);
        int take = 1e8;
        if(arr[ind]<=k) take = 1+f(ind,k-arr[ind],arr,dp);
        return dp[ind][k] = min(take,notTake);
    }
    int coinChange(vector<int>& coins, int amount) {
        int n = coins.size();
        vector<vector<int>> dp(n,vector<int>(amount+1,-1));
        int ans = f(n-1,amount,coins,dp);
        if(ans == 1e8){
            return -1;
        }
        return ans;
    }
};
