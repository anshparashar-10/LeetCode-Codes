/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int lengthLL(ListNode* head){
        ListNode* temp = head;
        int count=0;
        while(temp!=NULL){
            count++;
            temp = temp->next;
        }
        return count;
    }
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(head == NULL) return NULL;
        ListNode* temp = head;
        if(temp->next==NULL) return NULL;

        int counter = 1;
        int len = lengthLL(head);

        if(len == n && head -> next) return head -> next;
        
        while(temp -> next != NULL && counter<len-n){
            temp = temp->next;
            counter++;
        }
        if(temp->next == NULL) return temp;
        else{
            temp->next=temp->next->next;
        }
        return head;


    }
};
